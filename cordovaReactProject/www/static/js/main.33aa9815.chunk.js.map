{"version":3,"sources":["Game.js","Name.js","reportWebVitals.js","index.js"],"names":["SelectedButton","onClick","props","class","style","background","PickedColor","this","value","React","Component","i","kleur","tbl","document","createElement","Game","state","colorsToChoose","Array","fill","makedGuess","settedGame","a","tries","rightColor","rightPlace","selectedColor","slice","setState","alert","concat","setAttribute","orderArrayHeader","thead","appendChild","length","createTextNode","ready","forEach","element","includes","tr","insertRow","j","insertCell","getElementById","JSON","stringify","innerHTML","handleClick","test","renderButton","setGame","disabled","makeGuess","Name","firstName","lastName","handleChange","bind","handleSubmit","event","target","name","preventDefault","onSubmit","type","onChange","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","window","cordova","addEventListener","renderReactDom"],"mappings":"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","file":"static/js/main.33aa9815.chunk.js","sourcesContent":["import React from 'react';\r\nimport './App.css';\r\n\r\n\r\n// function Game() {\r\n//   return (\r\n//     <div className=\"App\">\r\n//       <header className=\"App-header\">\r\n//         <img src={logo} className=\"App-logo\" alt=\"logo\" />\r\n//         <p>\r\n//           Edit <code>src/App.js</code> and save to reload.\r\n//         </p>\r\n//         <a\r\n//           className=\"App-link\"\r\n//           href=\"https://reactjs.org\"\r\n//           target=\"_blank\"\r\n//           rel=\"noopener noreferrer\"\r\n//         >\r\n//           Learn React\r\n//         </a>\r\n//       </header>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n\r\nclass SelectedButton extends React.Component {\r\n    render() {\r\n      return (\r\n        <button onClick={() => this.props.onClick()} class=\"btn btn-lg m-1\" style={{ background: PickedColor(this.props.value) }}></button>\r\n      );\r\n    }\r\n  }\r\n  \r\n  function PickedColor(i) {\r\n    var kleur = \"\";\r\n    switch (i) {\r\n      case 0:\r\n        kleur = \"blue\";\r\n        break;\r\n      case 1:\r\n        kleur = \"green\";\r\n        break;\r\n      case 2:\r\n        kleur = \"red\";\r\n        break;\r\n      case 3:\r\n        kleur = \"yellow\";\r\n        break;\r\n      case 4:\r\n        kleur = \"pink\";\r\n        break;\r\n      case 5:\r\n        kleur = \"orange\";\r\n        break;\r\n      case 6:\r\n        kleur = \"purple\";\r\n        break;\r\n      case 7:\r\n        kleur = \"brown\";\r\n        break;\r\n      default:\r\n    }\r\n    return kleur;\r\n  }\r\n  \r\n  var tbl = document.createElement('table');\r\n  \r\n  function ready() {\r\n    tbl.setAttribute('class', 'table table-striped')\r\n    tbl.setAttribute('id', 'tabel');\r\n  \r\n    var orderArrayHeader = [\"Color 1\", \"Color 2\", \"Color 3\", \"Color 4\", \"Right color\", \"Right place\"];\r\n    var thead = document.createElement('thead');\r\n    tbl.appendChild(thead);\r\n    for (var i = 0; i < orderArrayHeader.length; i++) {\r\n      thead.appendChild(document.createElement(\"th\")).\r\n        appendChild(document.createTextNode(orderArrayHeader[i]));\r\n    }\r\n  }\r\n  \r\n  class Game extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n        colorsToChoose: Array(8).fill(null),\r\n        makedGuess: Array(4),\r\n        settedGame: Array(),\r\n        a: 0,\r\n        tries: 0,\r\n        rightColor: 0,\r\n        rightPlace: 0\r\n      };\r\n    }\r\n  \r\n    handleClick(i) {\r\n      const selectedColor = this.state.colorsToChoose.slice();\r\n      selectedColor[i] = PickedColor(i);\r\n      this.setState({ colorsToChoose: selectedColor });\r\n      if (this.state.a < 4) {\r\n        this.state.makedGuess[this.state.a] = PickedColor(i);\r\n      }\r\n      this.state.a++;\r\n    }\r\n  \r\n    setGame() {\r\n      //document.getElementById(\"myList\").innerHTML = \"\";\r\n      if (this.state.makedGuess[3] == null) {\r\n        alert(\"Select 4 colors\");\r\n      } else {\r\n        this.state.settedGame = Array();\r\n        this.setState({\r\n          settedGame: this.state.settedGame.concat(this.state.makedGuess)\r\n        });\r\n        this.state.makedGuess = Array(4);\r\n        this.state.a = 0;\r\n        this.state.tries = 0;\r\n        this.state.value = !this.state.value;\r\n        ready();\r\n      }\r\n    }\r\n  \r\n    makeGuess() {\r\n      if (this.state.makedGuess[3] == null) {\r\n        alert(\"Select 4 colors\");\r\n      } else {\r\n  \r\n        this.state.makedGuess.forEach(element => {\r\n          if (this.state.settedGame.includes(element)) {\r\n            this.state.rightColor += 1;\r\n          }\r\n        })\r\n  \r\n        for (let i = 0; i < 4; i++) {\r\n          if (this.state.makedGuess[i] == this.state.settedGame[i]) {\r\n            this.state.rightPlace += 1;\r\n          }\r\n        }\r\n  \r\n        for (var i = 0; i < 1; i++) {\r\n          var tr = tbl.insertRow();\r\n          for (var j = 0; j < 4; j++) {\r\n            var td0 = tr.insertCell();\r\n            td0.appendChild(document.createTextNode(this.state.makedGuess[j]));\r\n          }\r\n          var td0 = tr.insertCell();\r\n          td0.appendChild(document.createTextNode(this.state.rightColor - this.state.rightPlace));\r\n          td0 = tr.insertCell();\r\n          td0.appendChild(document.createTextNode(this.state.rightPlace));\r\n        }\r\n        document.getElementById(\"myList\").appendChild(tbl);\r\n  \r\n        this.setState({\r\n          tries: this.state.tries += 1,\r\n          rightColor: 0,\r\n          rightPlace: 0,\r\n          a: 0\r\n        });\r\n  \r\n        if (JSON.stringify(this.state.makedGuess) === JSON.stringify(this.state.settedGame)) {\r\n          this.state.value = !this.state.value;\r\n          alert('You have won: ' + this.state.makedGuess + \" \" + this.state.settedGame + \" with \" + this.state.tries + \" tries.\");\r\n          this.state.tries = 0;\r\n          this.state.rightPlace = 0;\r\n          document.getElementById(\"tabel\").innerHTML = \"\";\r\n        }\r\n        else {\r\n          this.state.makedGuess = Array(4);\r\n        }\r\n      }\r\n    }\r\n  \r\n    renderButton(i) {\r\n      return (\r\n        <SelectedButton\r\n          value={i}\r\n          onClick={() => this.handleClick(i)}\r\n          test={this.state.test}\r\n        />\r\n      );\r\n    }\r\n  \r\n    render() {\r\n      return (\r\n        <div>\r\n          <div>\r\n            <div>\r\n              {this.renderButton(0)}\r\n              {this.renderButton(1)}\r\n              {this.renderButton(2)}\r\n              {this.renderButton(3)}\r\n              {this.renderButton(4)}\r\n              {this.renderButton(5)}\r\n              {this.renderButton(6)}\r\n              {this.renderButton(7)}\r\n            </div>\r\n            <button class=\"btn btn-success m-1 w-25\" onClick={() => this.setGame()} disabled={this.state.value}>Set Color</button>\r\n            <button class=\"btn btn-success m-1 w-25\" onClick={() => this.makeGuess()}>Guess</button>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n\r\nexport default Game;\r\n","import React from 'react';\nimport './App.css';\n\nclass Name extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      firstName: '',\n      lastName: ''\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(event) {\n    const target = event.target;\n    const value = target.value;\n    const name = target.name;\n    this.setState({\n      [name]: value\n    });\n  }\n\n  handleSubmit(event) {\n    alert('A name was submitted: ' + this.state.firstName + \" \" + this.state.lastName);\n    event.preventDefault();\n  }\n\n  render() {\n    return (\n      <form onSubmit={this.handleSubmit}>\n        <div class=\"form-group\">\n          <h3 class=\"text-success\">First Name:</h3>\n          <input name=\"firstName\" class=\"form-control\" type=\"text\" value={this.state.firstName} onChange={this.handleChange} />\n        </div>\n        <div class=\"form-group\">\n          <h3 class=\"text-success\">Last Name:</h3>\n          <input name=\"lastName\" class=\"form-control\" type=\"text\" value={this.state.lastName} onChange={this.handleChange} />\n        </div>\n        <input type=\"submit\" class=\"btn btn-primary\" value=\"Submit\" />\n      </form>\n    );\n  }\n}\n\nexport default Name;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Game from './Game';\nimport Name from './Name';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Name />\n  </React.StrictMode>,\n  document.getElementById('user')\n);\n\nReactDOM.render(\n  <React.StrictMode>\n    <Game />\n  </React.StrictMode>,\n  document.getElementById('game')\n);\n\nif (window.cordova) {\n  document.addEventListener('deviceready', () => {\n    renderReactDom();\n  }, false);\n} else {\n  renderReactDom();\n}\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}